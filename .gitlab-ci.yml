image: golang:latest

variables:
  # Please edit to your GitLab project
  REPO_NAME: gitlab-sjc.cisco.com/tfprovider/fmc-terraform

# The problem is that to be able to use go get, one needs to put
# the repository in the $GOPATH. So for example if your gitlab domain
# is gitlab.com, and that your repository is namespace/project, and
# the default GOPATH being /go, then you'd need to have your
# repository in /go/src/gitlab.com/namespace/project
# Thus, making a symbolic link corrects this.
before_script:
  - cd /usr/local/share/ca-certificates
  - openssl s_client -showcerts -verify 5 -connect $FMC_HOST:443 < /dev/null | awk '/BEGIN/,/END/{ if(/BEGIN/){a++}; out="cert"a".pem"; print >out}'; for cert in *.pem; do newname=$(openssl x509 -noout -subject -in $cert | sed -nE 's/.*CN ?= ?(.*)/\1/; s/[ ,.*]/_/g; s/__/_/g; s/_-_/-/; s/^_//g;p' | tr '[:upper:]' '[:lower:]').crt; echo "${newname}"; mv "${cert}" "${newname}"; done
  - update-ca-certificates
  - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)
  - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME
  - cd $GOPATH/src/$REPO_NAME

stages:
  - test
  - build-test
  - build
  - release

test:
  stage: test
  when: manual
  script:
    - 'echo "Config: host: $FMC_HOST, user: $FMC_USERNAME, insecure: $FMC_INSECURE_SKIP_VERIFY"'
    - go fmt $(go list ./... | grep -v /vendor/)
    - go vet $(go list ./... | grep -v /vendor/)
    - make testacc

build-test:
  stage: build-test
  script:
    - make

build:
  stage: build
  script:
    - make release
  artifacts:
    paths:
      - release.tgz
      - release.zip

tag:
  stage: build
  only:
    - release
    - master
  image: 
    name: alpine/git
    entrypoint: [""]
  script:
    - git config user.email "${GITLAB_USER_EMAIL}"
    - git config user.name "${GITLAB_USER_NAME}"
    - git remote add origin https://oauth2:${GITLAB_ACCESS_TOKEN}@gitlab.com/${CI_PROJECT_PATH}
    - git tag -a "Release_$(date +%Y-%m-%d)" -m "Auto-Release"
    - git push origin "Release_$(date +%Y-%m-%d)"

release:
  when: manual
  only:
    - release
    - master
  image: inetprocess/gitlab-release
  stage: release
  only:
    - tags
  dependencies: 
    - build
    - tag
  script:
    - gitlab-release --message 'Automatic release' release.*
